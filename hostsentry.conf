DB_FILE = "/etc/hostsentry/hostsentry.db"
DB_TTY_FILE = "/etc/hostsentry/hostsentry.tty.db"
ACTION_FILE = "/etc/hostsentry/hostsentry.action"
IGNORE_FILE = "/etc/hostsentry/hostsentry.ignore"
MODULE_FILE = "/etc/hostsentry/hostsentry.modules"
MODULE_PATH = "/usr/lib/abacus/hostsentry/modules"
WTMP_FILE = "/var/log/wtmp"

# WTMP formats vary between Unices. As a result you need to let HostSentry
# know what format your wtmp is. Luckily I made this fairly straight
# forward if you know how to read your systems utmp.h or utmpx.h file.
#
# The basic things needed are:
#
# a) Size of utmp record (sizeof(struct utmp)) for your host.
# b) Offset to tty field from beginning of record.
# c) Length of tty field.
# d) Offset to username field from beginning of record.
# e) Length of username field.
# f) Offset to hostname field from beginning of record.
# g) Length of hostname field.
#
# The format is formed like this:
#
# utmpRecordLength/ttyOffset:ttyLen/usernameOffset:usernameLen/hostnameOffset:hostnameLen
# 
# For example on RedHat:
#
# utmp record size is: 384 bytes
# tty entry offset is: 8 bytes
# tty entry size from offset is: 32 bytes
# username entry offet is: 44 bytes
# username entry size from offset is: 32 bytes
# hostname entry offset is: 76 bytes
# hostname entry size from offset: 256 bytes
#
# This would be formed as "384/8:32/44:32/76:256"
#
# NOTE: All of this garbage will hopefully go away on a future update when
# I wrap native getutent() functions for Python.
#
# RedHat
WTMP_FORMAT = "384/8:32/44:32/76:256"
# Slackware
#WTMP_FORMAT = "56/8:12/28:8/36:16"
# BSD variants
#WTMP_FORMAT = "36/0:8/8:8/16:16"
